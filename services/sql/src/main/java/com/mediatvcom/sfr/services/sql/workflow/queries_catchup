0c-1c

SELECT date_0c, client_ip_0c, url_0c, code_http_0c, MIN(date_1c) as date_min_1c " +
                    "FROM ( " +
                        "SELECT 0c.date as date_0c, 0c.client_ip as client_ip_0c, " +
                        "0c.url as url_0c, 0c.code_http as code_http_0c, 1c.date as date_1c " +
                        "From srmGetContent0cModel 0c " +
                        "LEFT JOIN srmPostContent1cModel 1c " +
                        "ON 0c.client_ip = 1c.client_ip " +
                        "and unix_timestamp(1c.date, \"yyyy-MM-dd HH:mm:ss,SSS\") >= unix_timestamp(0c.date, \"yyyy-MM-dd HH:mm:ss,SSS\") " +
                        "and unix_timestamp(1c.date, \"yyyy-MM-dd HH:mm:ss,SSS\") < unix_timestamp(0c.date, \"yyyy-MM-dd HH:mm:ss,SSS\") + 2 " +
                    " ) jointure " +
                    "GROUP BY date_0c, client_ip_0c, url_0c, code_http_0c





4c:

"SELECT date as date_4c, vip as vip_4c, content_name as content_name_4c, " +
                 "control_session as control_session_4c, content_type as content_type_4c, " +
                 "client_id as client_id_4c, carteId as carteId_4c " +
                 "From srmSessionStart4cModel 4c "


For catchup: All Sessions with OK (l'enveloppe) )!
 Dataset<Row> sqlDF = spark.sql("SELECT rx.date as date_rx, 2v.date as date_2v, 2v.ondemand_session_id as ondemand_session_id_2v, " +
                 "2v.code_http as code_http_2v, rx.bitrate as bitrate_rx, rx.service_group as service_group_rx, rx.ip_rfgw as ip_rfgw_rx, " +
                 "rx.port_rfgw as port_rfgw_rx, rx.mode as mode_rx, " +
                 "tjoin.date_8c as date_8c_tj " +
                 "FROM srmRessource2v2cModel 2v " +
                 "LEFT JOIN usrm_vermserver_rx rx " +
                 "ON rx.ondemand_session_id = 2v.ondemand_session_id and rx.bitrate is not null " +
                 "LEFT JOIN usrm_vermserver_tx tx " +
                 "ON rx.ondemand_session_id = tx.ondemand_session_id and tx.code != \"teardown_or_ok\"  and tx.code != \"error\" " +
                 "JOIN ( SELECT Min(8c.date) as date_8c, 8c.ondemand_session_id as ondemand_session_id_8c " +
                 "from srmEnd8cModel 8c " +
                 "Group by ondemand_session_id) tjoin " +
                 "ON rx.ondemand_session_id = tjoin.ondemand_session_id_8c " +
                 "").repartition(1);

------

Jointure entre les sessions Catchup enveloppe et (4c) => Toutes les infos sauf les sessions Id.

         Dataset<Row> sqlDF = spark.sql("SELECT rx.date as date_rx, 2v.date as date_2v, 2v.ondemand_session_id as ondemand_session_id_2v, " +
                 "2v.code_http as code_http_2v, rx.bitrate as bitrate_rx, rx.service_group as service_group_rx, rx.ip_rfgw as ip_rfgw_rx, " +
                 "rx.port_rfgw as port_rfgw_rx, rx.mode as mode_rx, " +
                 "tjoin.date_8c as date_8c_tj, tjoin.content_type as content_type_8c " +
                 "FROM srmRessource2v2cModel 2v " +
                 "LEFT JOIN usrm_vermserver_rx rx " +
                 "ON rx.ondemand_session_id = 2v.ondemand_session_id and rx.bitrate is not null " +
                 "LEFT JOIN usrm_vermserver_tx tx " +
                 "ON rx.ondemand_session_id = tx.ondemand_session_id and tx.code != \"teardown_or_ok\"  and tx.code != \"error\" " +
                 "JOIN ( SELECT Min(8c.date) as date_8c, 8c.ondemand_session_id as ondemand_session_id_8c, content_type " +
                 "from srmEnd8cModel 8c " +
                 "Group by ondemand_session_id, content_type) tjoin " +
                 "ON rx.ondemand_session_id = tjoin.ondemand_session_id_8c " +
                 "").repartition(1);

         sqlDF.createOrReplaceTempView("cathup_success_session");

         Dataset<Row> sqlcatchupDF = spark.sql("SELECT catchupok.date_rx as date_rx_catchupok, catchupok.bitrate_rx as bitrate_rx_catchupok, catchupok.service_group_rx as service_group_rx_catchupok, " +
                         "catchupok.ip_rfgw_rx as ip_rfgw_rx_catchupok, catchupok.port_rfgw_rx as port_rfgw_rx_catchupok, " +
                         "date as date_4c_catchupok, vip as vip_4c_catchupok, content_name as content_name_4c_catchupok, " +
                         "content_type_8c as content_type_sfr, client_id as client_id_4c_catchupok, carteId as carteId_4c_catchupok, catchupok.ondemand_session_id_2v as ondemand_session_id_2v_catchupok, " +
                         "date_8c_tj as date_end, catchupok.mode_rx " +
                         "FROM cathup_success_session catchupok " +
                         "LEFT JOIN srmSessionStart4cModel 4c " +
                         "ON 4c.control_session = catchupok.ondemand_session_id_2v ").repartition(1);